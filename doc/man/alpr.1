.TH "phantom" "1" "28 January 2023" "" ""
.SH "NAME"
Phantom \- Automatic License Plate Recognition
.SH "SYNOPSIS"

.PP 
.nf 
Plate detection:  alpr [OPTION...] [IMAGE_PATH]

.fi 

.SH "DESCRIPTION"

.PP 
Phantom is an open source automated license plate recognition system heavily
based on OpenALPR. The library analyzes images and identifies license plates. The
output is the text representation of any license plate characters found in the image.
.PP 
Phantom supports license plates from the USA as well as number plates from Europe.
The library can also be used to identify plates from other countries. By training 
the library, the accuracy for these other countries can be increased.


.SH "USAGE"
.PP 

   alpr  [\-c <country_code>] [\-n <topN>] [\-\-]
         [\-\-version] [\-h] <image_file_path>


Where: 

   \-c <country_code>,  \-\-country <country_code>
     Country code to identify (either us for USA or eu for Europe). Can pass
     multiple country codes separated by a comma. For example au,us,eu.
     Default=us

   \-n <topN>,  \-\-topn <topN>
     Max number of possible plate numbers to return.  Default=10

   \-\-,  \-\-ignore_rest
     Ignores the rest of the labeled arguments following this flag.

   \-\-version
     Displays version information and exits.

   \-h,  \-\-help
     Displays usage information and exits.

   <image_file_path>
     Image containing license plates



.SH "EXAMPLES"
.PP 
.RS
.PP
\f(CW$ alpr \-c eu /source/image.jpg
.RE
.PP
This command will attempt to recognize number plates in the /source/image.jpg
image using the European\-style recognition data.
The config file is not provided on the CLI, so it will use the value in 
the environment variable 'OPENALPR_CONFIG_FILE' if provided, or the default location.
.PP
.RS
\f(CW$ alpr \-\-config /tmp/openalpr.conf /source/image.png
.RE
.PP
This command will attempt to recognize number plates in the /source/image.png
image using the default USA\-style recognition data.
The config file is not provided on the CLI, so it will read the configuration data
from /tmp/openalpr.conf
.PP
.RS
\f(CW$ alpr -c us *.jpg
.RE
.PP
This command will attempt to recognize number plates in all jpeg images in the current directory
image using the USA\-style recognition data.
.PP
.RS
\f(CW$ alpr \-j /source/video.mp4
.RE
.PP
This command reads data from an input video (/source/video.mp4) and outputs
recognition data as JSON.
.PP
.RS
\f(CW$ alpr \-j stdin < /source/imagefilelist.txt > /out/recognitionresults.txt
.RE
.PP
This command processes a list of image files provided in /source/imagefilelist.txt
and writes JSON results to /out/recognitionresults.txt.
.PP
.RS
\f(CW$ alpr webcam
.RE
.PP
This command processes video from your webcam.  You can also use /dev/video0, /dev/video1, etc. 
if you have multiple webcams.
.PP
.RE


.SH "DIAGNOSTICS"

.PP 
License plate recognition software can never achieve 100% accuracy.  In cases where the 
plate is not recognized correctly, there is diagnostic information available.  You 
can modify the openalpr.conf file to turn "debug" information on.
.PP
In the [debug] section toggle the various debug options to enabled by changing the '0' 
value to a '1'.  Some of these options will output text to the CLI and others may output 
images to the GUI.

.SH "CREDITS"

.PP 
Phantom is distributed under the GNU Affero General Public License Version 3.
See the file LICENSE for details.
.PP 
This program uses the following libraries:

.IP * 
OpenALPR - Automatic License Plate Recognition (openalpr.com)
.IP * 
OpenCV \- Computer Vision (http://www.opencv.org)
.IP * 
Tesseract \- Optical Character Recognition (https://code.google.com/p/tesseract\-ocr)
.IP * 
T\-Rex \- Regular Expression rocessing (http://tiny\-rex.sourceforge.net)
.IP * 
TinyThread++ \- Multi\-threaded Analysis (http://tinythreadpp.bitsnbites.eu)
.IP * 
TClap \- CLI Argument Parsing (http://tclap.sourceforge.net)
.IP * 
SimpleINI \- INI File Fonfiguration (https://github.com/brofield/simpleini)

.SH "AUTHOR"

.PP 
Phantom is maintained by Conner Vieira (admin@v0lttech.com) and is heavily dependent on OpenALPR.
OpenALPR is written and maintained by Matthew Hill (matthill@openalpr.com)
